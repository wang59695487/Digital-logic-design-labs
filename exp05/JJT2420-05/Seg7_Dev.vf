////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Seg7_Dev.vf
// /___/   /\     Timestamp : 03/13/2018 15:12:37
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath G:/organization/counter/ipcore_dir -intstyle ise -family kintex7 -verilog G:/organization/counter/Seg7_Dev.vf -w G:/organization/counter/code/Seg7_Dev.sch
//Design Name: Seg7_Dev
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module ScanSync_MUSER_Seg7_Dev(Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               AN, 
                               Hexo, 
                               LE, 
                               p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   BUF  XLXI_3 (.I(Hex[7]), 
               .O(Hexo[3]));
   BUF  XLXI_4 (.I(Hex[6]), 
               .O(Hexo[2]));
   BUF  XLXI_5 (.I(Hex[5]), 
               .O(Hexo[1]));
   BUF  XLXI_6 (.I(Hex[4]), 
               .O(Hexo[0]));
   BUF  XLXI_7 (.I(COM[3]), 
               .O(AN[3]));
   BUF  XLXI_8 (.I(COM[2]), 
               .O(AN[2]));
   BUF  XLXI_9 (.I(COM[1]), 
               .O(AN[1]));
   BUF  XLXI_10 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_11 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_12 (.I(COM[6]), 
                .O(p));
   VCC  XLXI_13 (.P(V5));
   GND  XLXI_14 (.G(G0));
   MUX8T1_8  XLXI_15 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                     .I1({Hexs[7:4], G0, G0, G0, G0}), 
                     .I2({Hexs[11:8], G0, G0, G0, G0}), 
                     .I3({Hexs[15:12], G0, G0, G0, G0}), 
                     .I4({Hexs[19:16], G0, G0, G0, G0}), 
                     .I5({Hexs[23:20], G0, G0, G0, G0}), 
                     .I6({Hexs[27:24], G0, G0, G0, G0}), 
                     .I7({Hexs[31:28], G0, G0, G0, G0}), 
                     .s(Scan[2:0]), 
                     .O(Hex[7:0]));
   MUX8T1_8  XLXI_16 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, G0}), 
                     .I1({LES[1], point[1], G0, G0, V5, V5, G0, V5}), 
                     .I2({LES[2], point[2], G0, G0, V5, G0, V5, V5}), 
                     .I3({LES[3], point[3], G0, G0, G0, V5, V5, V5}), 
                     .I4({LES[4], point[4], G0, G0, V5, V5, V5, G0}), 
                     .I5({LES[5], point[5], G0, G0, V5, V5, G0, V5}), 
                     .I6({LES[6], point[6], G0, G0, V5, G0, V5, V5}), 
                     .I7({LES[7], point[7], G0, G0, G0, V5, V5, V5}), 
                     .s(Scan[2:0]), 
                     .O(COM[7:0]));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev(flash, 
                Hexs, 
                LES, 
                point, 
                Scan, 
                SW0, 
                AN, 
                SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire G0;
   wire [3:0] Hex;
   wire [7:0] SEG_TXT;
   wire V5;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire [7:0] XLXN_19;
   
   MUXHM  MHXHM (.a(XLXN_19[7:0]), 
                .b(SEG_TXT[7:0]), 
                .sel(SW0), 
                .o(SEGMENT[7:0]));
   MC14495_ZJU  M1 (.D0(Hex[0]), 
                   .D1(Hex[1]), 
                   .D2(Hex[2]), 
                   .D3(Hex[3]), 
                   .LE(XLXN_8), 
                   .Point(XLXN_9), 
                   .a(SEG_TXT[0]), 
                   .b(SEG_TXT[1]), 
                   .c(SEG_TXT[2]), 
                   .d(SEG_TXT[3]), 
                   .e(SEG_TXT[4]), 
                   .f(SEG_TXT[5]), 
                   .g(SEG_TXT[6]), 
                   .p(SEG_TXT[7]));
   ScanSync_MUSER_Seg7_Dev  M2 (.Hexs(Hexs[31:0]), 
                               .LES(LES[7:0]), 
                               .point(point[7:0]), 
                               .Scan(Scan[2:0]), 
                               .AN(AN[3:0]), 
                               .Hexo(Hex[3:0]), 
                               .LE(XLXN_10), 
                               .p(XLXN_9));
   Seg_map  M3 (.Hexs(Hexs[31:0]), 
               .Scan(Scan[2:0]), 
               .Seg_map(XLXN_19[7:0]));
   AND2  XLXI_6 (.I0(XLXN_10), 
                .I1(flash), 
                .O(XLXN_8));
   VCC  XLXI_9 (.P(V5));
   GND  XLXI_10 (.G(G0));
endmodule
