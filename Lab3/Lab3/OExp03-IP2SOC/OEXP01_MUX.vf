////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : OEXP01_MUX.vf
// /___/   /\     Timestamp : 03/21/2019 19:31:25
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/Z/OExp03-IP2SOC/OExp03-IP2SOC/ipcore_dir -intstyle ise -family kintex7 -verilog E:/Z/OExp03-IP2SOC/OExp03-IP2SOC/OEXP01_MUX.vf -w E:/Z/OExp03-IP2SOC/OExp03-IP2SOC/OEXP01_MUX.sch
//Design Name: OEXP01_MUX
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module OEXP01_MUX(clk_100mhz, 
                  K_COL, 
                  RSTN, 
                  SW, 
                  AN, 
                  Buzzer, 
                  CR, 
                  K_ROW, 
                  LED, 
                  LEDCLK, 
                  LEDCLR, 
                  LEDDT, 
                  LEDEN, 
                  RDY, 
                  readn, 
                  SEGCLK, 
                  SEGCLR, 
                  SEGDT, 
                  SEGEN, 
                  SEGMENT);

    input clk_100mhz;
    input [3:0] K_COL;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output Buzzer;
   output CR;
   output [4:0] K_ROW;
   output [7:0] LED;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   output [7:0] SEGMENT;
   
   wire [31:0] Addr_out;
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire [31:0] inst;
   wire IO_clk;
   wire [7:0] LE_out;
   wire mem_W;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_7;
   wire XLXN_52;
   wire [31:0] XLXN_270;
   wire [0:0] XLXN_271;
   wire [9:0] XLXN_272;
   wire [31:0] XLXN_275;
   wire XLXN_364;
   wire XLXN_365;
   wire [15:0] XLXN_383;
   wire [1:0] XLXN_385;
   wire XLXN_388;
   wire XLXN_389;
   wire XLXN_390;
   wire XLXN_391;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_7[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   Multi_8CH32  U5 (.clk(IO_clk), 
                   .Data0(CPU2IO[31:0]), 
                   .data1({N0, N0, PC[31:2]}), 
                   .data2(inst[31:0]), 
                   .data3(Counter_out[31:0]), 
                   .data4(Addr_out[31:0]), 
                   .data5(Data_out[31:0]), 
                   .data6(Data_in[31:0]), 
                   .data7(PC[31:0]), 
                   .EN(XLXN_364), 
                   .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0}), 
                   .point_in({Div[31:0], Div[31:0]}), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(Disp_num[31:0]), 
                   .LE_out(LE_out[7:0]), 
                   .point_out(point_out[7:0]));
   Display  U6 (.clk(clk_100mhz), 
               .flash(Div[25]), 
               .Hexs(Disp_num[31:0]), 
               .LES(LE_out[7:0]), 
               .point(point_out[7:0]), 
               .rst(rst), 
               .Start(Div[20]), 
               .Text(SW_OK[0]), 
               .segclk(SEGCLK), 
               .segclrn(SEGCLR), 
               .SEGEN(SEGEN), 
               .segsout(SEGDT));
   GPIO  U7 (.clk(IO_clk), 
            .EN(XLXN_365), 
            .P_Data(CPU2IO[31:0]), 
            .rst(rst), 
            .Start(Div[20]), 
            .counter_set(XLXN_385[1:0]), 
            .GPIOf0(), 
            .ledclk(LEDCLK), 
            .ledclrn(LEDCLR), 
            .LEDEN(LEDEN), 
            .ledsout(LEDDT), 
            .LED_out(XLXN_383[15:0]));
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(rst), 
               .SW2(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(K_COL[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_7[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(K_ROW[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   Seg7_Dev  U61 (.flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .Scan({SW_OK[1], Div[19:18]}), 
                 .SW0(SW_OK[0]), 
                 .AN(AN[3:0]), 
                 .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(clk_100mhz), 
            .EN(V5), 
            .PData_in(Ai[31:0]), 
            .rst(N0), 
            .counter_set(), 
            .GPIOf0(), 
            .LED_out(LED[7:0]));
   INV  XLXI_11 (.I(clk_100mhz), 
                .O(XLXN_52));
   GND  XLXI_12 (.G(N0));
   VCC  XLXI_13 (.P(V5));
   BUF  XLXI_16 (.I(V5), 
                .O(Buzzer));
   MIO_BUS  XLXI_34 (.addr_bus(Addr_out[31:0]), 
                    .BTN(BTN_OK[3:0]), 
                    .clk(clk_100mhz), 
                    .counter_out(Counter_out[31:0]), 
                    .counter0_out(XLXN_390), 
                    .counter1_out(XLXN_389), 
                    .counter2_out(XLXN_388), 
                    .Cpu_data2bus(Data_out[31:0]), 
                    .led_out(XLXN_383[15:0]), 
                    .mem_w(mem_W), 
                    .ram_data_out(XLXN_275[31:0]), 
                    .rst(rst), 
                    .SW(SW_OK[15:0]), 
                    .counter_we(XLXN_391), 
                    .Cpu_data4bus(Data_in[31:0]), 
                    .data_ram_we(XLXN_271[0]), 
                    .GPIOe0000000_we(XLXN_364), 
                    .GPIOf0000000_we(XLXN_365), 
                    .Peripheral_in(CPU2IO[31:0]), 
                    .ram_addr(XLXN_272[9:0]), 
                    .ram_data_in(XLXN_270[31:0]));
   SCPU  XLXI_35 (.clk(Clk_CPU), 
                 .Data_in(Data_in[31:0]), 
                 .inst_in(inst[31:0]), 
                 .INT(XLXN_390), 
                 .MIO_ready(), 
                 .reset(rst), 
                 .Addr_out(Addr_out[31:0]), 
                 .CPU_MIO(), 
                 .Data_out(Data_out[31:0]), 
                 .mem_w(mem_W), 
                 .PC_out(PC[31:0]));
   ROM_D  XLXI_36 (.a(PC[11:2]), 
                  .spo(inst[31:0]));
   RAM_B  XLXI_37 (.addra(XLXN_272[9:0]), 
                  .clka(XLXN_52), 
                  .dina(XLXN_270[31:0]), 
                  .wea(XLXN_271[0]), 
                  .douta(XLXN_275[31:0]));
   Counter_x  XLXI_38 (.clk(IO_clk), 
                      .clk0(Div[6]), 
                      .clk1(Div[9]), 
                      .clk2(Div[11]), 
                      .counter_ch(XLXN_385[1:0]), 
                      .counter_val(CPU2IO[31:0]), 
                      .counter_we(XLXN_391), 
                      .rst(rst), 
                      .counter_out(Counter_out[31:0]), 
                      .counter0_OUT(XLXN_390), 
                      .counter1_OUT(XLXN_389), 
                      .counter2_OUT(XLXN_388));
   INV  XLXI_39 (.I(Clk_CPU), 
                .O(IO_clk));
endmodule
