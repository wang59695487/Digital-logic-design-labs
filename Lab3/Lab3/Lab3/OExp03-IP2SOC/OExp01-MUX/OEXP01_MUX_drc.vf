////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : OEXP01_MUX_drc.vf
// /___/   /\     Timestamp : 03/04/2019 00:33:02
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinxcyz\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family kintex7 -verilog OEXP01_MUX_drc.vf -w C:/ISEPRO/OExp01-MUX/OEXP01_MUX.sch
//Design Name: OEXP01_MUX
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module OEXP01_MUX(BTN_y, 
                  clk_100mhz, 
                  RSTN, 
                  SW, 
                  AN, 
                  BTN_x, 
                  Buzzer, 
                  CR, 
                  LED, 
                  LEDCLK, 
                  LEDCLR, 
                  LEDDT, 
                  LEDEN, 
                  RDY, 
                  readn, 
                  SEGCLK, 
                  SEGCLR, 
                  SEGDT, 
                  SEGEN, 
                  SEGMENT);

    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   output [7:0] SEGMENT;
   
   wire [31:0] Ai;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire [7:0] LE_out;
   wire N0;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_7;
   wire XLXN_20;
   wire [31:0] XLXN_33;
   wire XLXN_52;
   wire [31:0] XLXN_53;
   wire [31:0] XLXN_54;
   wire [31:0] XLXN_55;
   wire [31:0] XLXN_56;
   wire [31:0] XLXN_57;
   wire [31:0] XLXN_58;
   wire [31:0] XLXN_62;
   wire [31:0] XLXN_63;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SAnti_jitter  XLXI_1 (.clk(clk_100mhz), 
                        .Key_y(BTN_y[3:0]), 
                        .readn(readn_DUMMY), 
                        .RSTN(RSTN), 
                        .SW(SW[15:0]), 
                        .BTN_OK(BTN_OK[3:0]), 
                        .CR(CR), 
                        .Key_out(XLXN_7[4:0]), 
                        .Key_ready(RDY_DUMMY), 
                        .Key_x(BTN_x[4:0]), 
                        .pulse_out(Pulse[3:0]), 
                        .rst(XLXN_20), 
                        .SW_OK(SW_OK[15:0]));
   SEnter_2_32  XLXI_2 (.BTN(BTN_OK[2:0]), 
                       .clk(clk_100mhz), 
                       .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                       .Din(XLXN_7[4:0]), 
                       .D_ready(RDY_DUMMY), 
                       .Ai(XLXN_62[31:0]), 
                       .Bi(XLXN_63[31:0]), 
                       .blink(blink[7:0]), 
                       .readn(readn_DUMMY));
   clk_div  XLXI_3 (.clk(clk_100mhz), 
                   .rst(XLXN_20), 
                   .SW2(SW_OK[2]), 
                   .clkdiv(Div[31:0]), 
                   .Clk_CPU(Clk_CPU));
   Display  XLXI_5 (.clk(clk_100mhz), 
                   .flash(Div[25]), 
                   .Hexs(XLXN_33[31:0]), 
                   .LES(LE_out[7:0]), 
                   .point(point_out[7:0]), 
                   .rst(XLXN_20), 
                   .Start(Div[10]), 
                   .Text(SW_OK[0]), 
                   .segclk(SEGCLK), 
                   .segclrn(SEGCLR), 
                   .SEGEN(SEGEN), 
                   .segsout(SEGDT));
   Multi_8CH32  XLXI_6 (.clk(clk_100mhz), 
                       .Data0(XLXN_62[31:0]), 
                       .data1(XLXN_63[31:0]), 
                       .data2(XLXN_55[31:0]), 
                       .data3(XLXN_56[31:0]), 
                       .data4(XLXN_57[31:0]), 
                       .data5(XLXN_58[31:0]), 
                       .data6(XLXN_53[31:0]), 
                       .data7(XLXN_54[31:0]), 
                       .EN(V5), 
                       .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         blink[3:0], N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, blink[7:0], blink[7:0]}), 
                       .point_in({Div[31:0], Div[31:0]}), 
                       .rst(XLXN_20), 
                       .Test(SW_OK[7:5]), 
                       .Disp_num(XLXN_33[31:0]), 
                       .LE_out(LE_out[7:0]), 
                       .point_out(point_out[7:0]));
   GPIO  XLXI_8 (.clk(clk_100mhz), 
                .EN(V5), 
                .P_Data({SW[13:0], SW_OK[15:0], N0, N0}), 
                .rst(rst), 
                .Start(Div[10]), 
                .counter_set(), 
                .GPIOf0(), 
                .ledclk(LEDCLK), 
                .ledclrn(LEDCLR), 
                .LEDEN(LEDEN), 
                .ledsout(LEDDT), 
                .LED_out());
   ROM_D  XLXI_9 (.a({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
                 .spo(XLXN_53[31:0]));
   RAM_B  XLXI_10 (.addra({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
                  .clka(XLXN_52), 
                  .dina(XLXN_53[31:0]), 
                  .wea(SW_OK[4]), 
                  .douta(XLXN_54[31:0]));
   INV  XLXI_11 (.I(clk_100mhz), 
                .O(XLXN_52));
   GND  XLXI_12 (.G(N0));
   VCC  XLXI_13 (.P(V5));
   PIO  XLXI_14 (.clk(clk_100mhz), 
                .EN(V5), 
                .PData_in(Ai[31:0]), 
                .rst(N0), 
                .counter_set(), 
                .GPIOf0(), 
                .LED_out(LED[7:0]));
   Seg7_Dev  XLXI_15 (.flash(Div[25]), 
                     .Hexs(Disp_num[31:0]), 
                     .LES(LE_out[7:0]), 
                     .point(point_out[7:0]), 
                     .Scan({SW_OK[1], Div[19:18]}), 
                     .SW0(SW_OK[0]), 
                     .AN(AN[3:0]), 
                     .SEGMENT(SEGMENT[7:0]));
   BUF  XLXI_16 (.I(V5), 
                .O(Buzzer));
endmodule
