////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : SCANSYNC_1.vf
// /___/   /\     Timestamp : 03/18/2019 20:45:11
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/test_2/computer_/3/v1.6.1/ipcore_dir -intstyle ise -family kintex7 -verilog E:/test_2/computer_/3/v1.6.1/SCANSYNC_1.vf -w E:/test_2/computer_/3/v1.6.1/SCANSYNC_1.sch
//Design Name: SCANSYNC_1
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_SCANSYNC_1(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 s, 
                                 o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_62;
   wire XLXN_120;
   wire x_3;
   wire x_22;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_6));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_7));
   AND2  XLXI_3 (.I0(XLXN_7), 
                .I1(XLXN_6), 
                .O(x_22));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_6), 
                .O(XLXN_120));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_7), 
                .O(x_3));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_62));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(x_22), 
                .O(XLXN_32));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_120), 
                .O(XLXN_33));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(x_3), 
                .O(XLXN_34));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_62), 
                 .O(XLXN_35));
   OR4  XLXI_11 (.I0(XLXN_35), 
                .I1(XLXN_34), 
                .I2(XLXN_33), 
                .I3(XLXN_32), 
                .O(o[0]));
   AND2  XLXI_12 (.I0(I0[1]), 
                 .I1(x_22), 
                 .O(XLXN_38));
   AND2  XLXI_13 (.I0(I1[1]), 
                 .I1(XLXN_120), 
                 .O(XLXN_39));
   AND2  XLXI_14 (.I0(I2[1]), 
                 .I1(x_3), 
                 .O(XLXN_40));
   AND2  XLXI_15 (.I0(I3[1]), 
                 .I1(XLXN_62), 
                 .O(XLXN_41));
   OR4  XLXI_16 (.I0(XLXN_41), 
                .I1(XLXN_40), 
                .I2(XLXN_39), 
                .I3(XLXN_38), 
                .O(o[1]));
   AND2  XLXI_17 (.I0(I0[2]), 
                 .I1(x_22), 
                 .O(XLXN_43));
   AND2  XLXI_18 (.I0(I1[2]), 
                 .I1(XLXN_120), 
                 .O(XLXN_44));
   AND2  XLXI_19 (.I0(I2[2]), 
                 .I1(x_3), 
                 .O(XLXN_45));
   AND2  XLXI_20 (.I0(I3[2]), 
                 .I1(XLXN_62), 
                 .O(XLXN_46));
   OR4  XLXI_21 (.I0(XLXN_46), 
                .I1(XLXN_45), 
                .I2(XLXN_44), 
                .I3(XLXN_43), 
                .O(o[2]));
   AND2  XLXI_22 (.I0(I0[3]), 
                 .I1(x_22), 
                 .O(XLXN_48));
   AND2  XLXI_23 (.I0(I1[3]), 
                 .I1(XLXN_120), 
                 .O(XLXN_49));
   AND2  XLXI_24 (.I0(I2[3]), 
                 .I1(x_3), 
                 .O(XLXN_50));
   AND2  XLXI_25 (.I0(I3[3]), 
                 .I1(XLXN_62), 
                 .O(XLXN_51));
   OR4  XLXI_26 (.I0(XLXN_51), 
                .I1(XLXN_50), 
                .I2(XLXN_49), 
                .I3(XLXN_48), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_SCANSYNC_1(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 I4, 
                                 I5, 
                                 I6, 
                                 I7, 
                                 s, 
                                 o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_108;
   
   AND2  XLXI_10 (.I0(o0[0]), 
                 .I1(XLXN_108), 
                 .O(XLXN_33));
   AND2  XLXI_11 (.I0(o1[0]), 
                 .I1(s[2]), 
                 .O(XLXN_34));
   OR2  XLXI_14 (.I0(XLXN_34), 
                .I1(XLXN_33), 
                .O(o[0]));
   AND2  XLXI_15 (.I0(o0[1]), 
                 .I1(XLXN_108), 
                 .O(XLXN_40));
   AND2  XLXI_16 (.I0(o1[1]), 
                 .I1(s[2]), 
                 .O(XLXN_39));
   OR2  XLXI_17 (.I0(XLXN_39), 
                .I1(XLXN_40), 
                .O(o[1]));
   AND2  XLXI_18 (.I0(o0[2]), 
                 .I1(XLXN_108), 
                 .O(XLXN_42));
   AND2  XLXI_19 (.I0(o1[2]), 
                 .I1(s[2]), 
                 .O(XLXN_41));
   OR2  XLXI_20 (.I0(XLXN_41), 
                .I1(XLXN_42), 
                .O(o[2]));
   AND2  XLXI_21 (.I0(o0[3]), 
                 .I1(XLXN_108), 
                 .O(XLXN_44));
   AND2  XLXI_22 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_43));
   OR2  XLXI_23 (.I0(XLXN_43), 
                .I1(XLXN_44), 
                .O(o[3]));
   AND2  XLXI_24 (.I0(o2[0]), 
                 .I1(XLXN_108), 
                 .O(XLXN_46));
   AND2  XLXI_25 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_45));
   OR2  XLXI_26 (.I0(XLXN_45), 
                .I1(XLXN_46), 
                .O(o[4]));
   AND2  XLXI_27 (.I0(o2[1]), 
                 .I1(XLXN_108), 
                 .O(XLXN_48));
   AND2  XLXI_28 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_47));
   OR2  XLXI_29 (.I0(XLXN_47), 
                .I1(XLXN_48), 
                .O(o[5]));
   AND2  XLXI_30 (.I0(o2[2]), 
                 .I1(XLXN_108), 
                 .O(XLXN_50));
   AND2  XLXI_31 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_49));
   OR2  XLXI_32 (.I0(XLXN_49), 
                .I1(XLXN_50), 
                .O(o[6]));
   AND2  XLXI_33 (.I0(o2[3]), 
                 .I1(XLXN_108), 
                 .O(XLXN_52));
   AND2  XLXI_34 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_51));
   OR2  XLXI_35 (.I0(XLXN_51), 
                .I1(XLXN_52), 
                .O(o[7]));
   INV  XLXI_36 (.I(s[2]), 
                .O(XLXN_108));
   MUX4T1_4_MUSER_SCANSYNC_1  XLXI_37 (.I0(I0[3:0]), 
                                      .I1(I1[3:0]), 
                                      .I2(I2[3:0]), 
                                      .I3(I3[3:0]), 
                                      .s(s[1:0]), 
                                      .o(o0[3:0]));
   MUX4T1_4_MUSER_SCANSYNC_1  XLXI_38 (.I0(I4[3:0]), 
                                      .I1(I5[3:0]), 
                                      .I2(I6[3:0]), 
                                      .I3(I7[3:0]), 
                                      .s(s[1:0]), 
                                      .o(o1[3:0]));
   MUX4T1_4_MUSER_SCANSYNC_1  XLXI_39 (.I0(I0[7:4]), 
                                      .I1(I1[7:4]), 
                                      .I2(I2[7:4]), 
                                      .I3(I3[7:4]), 
                                      .s(s[1:0]), 
                                      .o(o2[3:0]));
   MUX4T1_4_MUSER_SCANSYNC_1  XLXI_40 (.I0(I4[7:4]), 
                                      .I1(I5[7:4]), 
                                      .I2(I6[7:4]), 
                                      .I3(I7[7:4]), 
                                      .s(s[1:0]), 
                                      .o(o3[3:0]));
endmodule
`timescale 1ns / 1ps

module SCANSYNC_1(Hexs, 
                  LES, 
                  point, 
                  Scan, 
                  AN, 
                  Hexo, 
                  LE, 
                  p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   MUX8T1_8_MUSER_SCANSYNC_1  XLXI_1 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                     .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                     .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                     .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                     .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                     .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                     .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                     .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                     .s(Scan[2:0]), 
                                     .o(Hex[7:0]));
   MUX8T1_8_MUSER_SCANSYNC_1  XLXI_2 (.I0({LES[0], point[0], G0, G0, V5, V5, 
         V5, G0}), 
                                     .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                     .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                     .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                     .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                     .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                     .I6({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                     .I7({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                     .s(Scan[2:0]), 
                                     .o(COM[7:0]));
   VCC  XLXI_5 (.P(V5));
   GND  XLXI_6 (.G(G0));
   BUF  XLXI_7 (.I(Hex[7]), 
               .O(Hexo[3]));
   BUF  XLXI_8 (.I(Hex[6]), 
               .O(Hexo[2]));
   BUF  XLXI_9 (.I(Hex[5]), 
               .O(Hexo[1]));
   BUF  XLXI_10 (.I(Hex[4]), 
                .O(Hexo[0]));
   BUF  XLXI_11 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_12 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_13 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_14 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_15 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_16 (.I(COM[6]), 
                .O(p));
endmodule
