////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUX_8.vf
// /___/   /\     Timestamp : 03/18/2019 20:45:12
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/test_2/computer_/3/v1.6.1/ipcore_dir -intstyle ise -family kintex7 -verilog E:/test_2/computer_/3/v1.6.1/MUX_8.vf -w E:/test_2/computer_/3/v1.6.1/MUX_8.sch
//Design Name: MUX_8
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX_4_MUSER_MUX_8(ai, 
                         bi, 
                         s, 
                         ou);

    input [3:0] ai;
    input [3:0] bi;
    input s;
   output [3:0] ou;
   
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_25;
   
   AND2  XLXI_1 (.I0(ai[0]), 
                .I1(XLXN_25), 
                .O(XLXN_16));
   AND2  XLXI_2 (.I0(ai[1]), 
                .I1(XLXN_25), 
                .O(XLXN_17));
   AND2  XLXI_3 (.I0(ai[2]), 
                .I1(XLXN_25), 
                .O(XLXN_18));
   AND2  XLXI_4 (.I0(ai[3]), 
                .I1(XLXN_25), 
                .O(XLXN_19));
   AND2  XLXI_8 (.I0(bi[0]), 
                .I1(s), 
                .O(XLXN_20));
   AND2  XLXI_9 (.I0(bi[2]), 
                .I1(s), 
                .O(XLXN_22));
   AND2  XLXI_10 (.I0(bi[3]), 
                 .I1(s), 
                 .O(XLXN_23));
   AND2  XLXI_11 (.I0(bi[1]), 
                 .I1(s), 
                 .O(XLXN_21));
   OR2  XLXI_16 (.I0(XLXN_20), 
                .I1(XLXN_16), 
                .O(ou[0]));
   OR2  XLXI_17 (.I0(XLXN_21), 
                .I1(XLXN_17), 
                .O(ou[1]));
   OR2  XLXI_18 (.I0(XLXN_22), 
                .I1(XLXN_18), 
                .O(ou[2]));
   OR2  XLXI_19 (.I0(XLXN_23), 
                .I1(XLXN_19), 
                .O(ou[3]));
   INV  XLXI_20 (.I(s), 
                .O(XLXN_25));
endmodule
`timescale 1ns / 1ps

module MUX_8(a, 
             b, 
             s, 
             ou);

    input [7:0] a;
    input [7:0] b;
    input s;
   output [7:0] ou;
   
   
   MUX_4_MUSER_MUX_8  XLXI_1 (.ai(a[3:0]), 
                             .bi(b[3:0]), 
                             .s(s), 
                             .ou(ou[3:0]));
   MUX_4_MUSER_MUX_8  XLXI_2 (.ai(a[7:4]), 
                             .bi(b[7:4]), 
                             .s(s), 
                             .ou(ou[7:4]));
endmodule
