////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Framework.vf
// /___/   /\     Timestamp : 03/26/2019 16:41:07
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath D:/v1.6.1/ipcore_dir -intstyle ise -family kintex7 -verilog D:/v1.6.1/Framework.vf -w D:/v1.6.1/Framework.sch
//Design Name: Framework
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module SCPU_MUSER_Framework(clk, 
                            Data_in, 
                            inst_in, 
                            INT, 
                            MIO_ready, 
                            reset, 
                            Addr_out, 
                            CPU_MIO, 
                            Data_out, 
                            mem_w, 
                            PC_out);

    input clk;
    input [31:0] Data_in;
    input [31:0] inst_in;
    input INT;
    input MIO_ready;
    input reset;
   output [31:0] Addr_out;
   output CPU_MIO;
   output [31:0] Data_out;
   output mem_w;
   output [31:0] PC_out;
   
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire [2:0] XLXN_12;
   
   Data_path  XLXI_1 (.ALUSrc_B(XLXN_7), 
                     .ALU_Control(XLXN_12[2:0]), 
                     .Branch(XLXN_10), 
                     .clk(clk), 
                     .Data_in(Data_in[31:0]), 
                     .inst_field(inst_in[25:0]), 
                     .Jump(XLXN_9), 
                     .MemtoReg(XLXN_8), 
                     .RegDst(XLXN_6), 
                     .RegWrite(XLXN_11), 
                     .rst(reset), 
                     .ALU_out(Addr_out[31:0]), 
                     .Data_out(Data_out[31:0]), 
                     .PC_out(PC_out[31:0]));
   SCPU_ctrl  XLXI_2 (.Fun(inst_in[5:0]), 
                     .MIO_ready(MIO_ready), 
                     .OPcode(inst_in[31:26]), 
                     .ALUSrc_B(XLXN_7), 
                     .ALU_Control(XLXN_12[2:0]), 
                     .Branch(XLXN_10), 
                     .CPU_MIO(CPU_MIO), 
                     .Jump(XLXN_9), 
                     .MemtoReg(XLXN_8), 
                     .mem_w(mem_w), 
                     .RegDst(XLXN_6), 
                     .RegWrite(XLXN_11));
endmodule
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_Framework(I0, 
                                I1, 
                                I2, 
                                I3, 
                                s, 
                                o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_62;
   wire XLXN_120;
   wire x_3;
   wire x_22;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_6));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_7));
   AND2  XLXI_3 (.I0(XLXN_7), 
                .I1(XLXN_6), 
                .O(x_22));
   AND2  XLXI_4 (.I0(s[0]), 
                .I1(XLXN_6), 
                .O(XLXN_120));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_7), 
                .O(x_3));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_62));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(x_22), 
                .O(XLXN_32));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_120), 
                .O(XLXN_33));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(x_3), 
                .O(XLXN_34));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_62), 
                 .O(XLXN_35));
   OR4  XLXI_11 (.I0(XLXN_35), 
                .I1(XLXN_34), 
                .I2(XLXN_33), 
                .I3(XLXN_32), 
                .O(o[0]));
   AND2  XLXI_12 (.I0(I0[1]), 
                 .I1(x_22), 
                 .O(XLXN_38));
   AND2  XLXI_13 (.I0(I1[1]), 
                 .I1(XLXN_120), 
                 .O(XLXN_39));
   AND2  XLXI_14 (.I0(I2[1]), 
                 .I1(x_3), 
                 .O(XLXN_40));
   AND2  XLXI_15 (.I0(I3[1]), 
                 .I1(XLXN_62), 
                 .O(XLXN_41));
   OR4  XLXI_16 (.I0(XLXN_41), 
                .I1(XLXN_40), 
                .I2(XLXN_39), 
                .I3(XLXN_38), 
                .O(o[1]));
   AND2  XLXI_17 (.I0(I0[2]), 
                 .I1(x_22), 
                 .O(XLXN_43));
   AND2  XLXI_18 (.I0(I1[2]), 
                 .I1(XLXN_120), 
                 .O(XLXN_44));
   AND2  XLXI_19 (.I0(I2[2]), 
                 .I1(x_3), 
                 .O(XLXN_45));
   AND2  XLXI_20 (.I0(I3[2]), 
                 .I1(XLXN_62), 
                 .O(XLXN_46));
   OR4  XLXI_21 (.I0(XLXN_46), 
                .I1(XLXN_45), 
                .I2(XLXN_44), 
                .I3(XLXN_43), 
                .O(o[2]));
   AND2  XLXI_22 (.I0(I0[3]), 
                 .I1(x_22), 
                 .O(XLXN_48));
   AND2  XLXI_23 (.I0(I1[3]), 
                 .I1(XLXN_120), 
                 .O(XLXN_49));
   AND2  XLXI_24 (.I0(I2[3]), 
                 .I1(x_3), 
                 .O(XLXN_50));
   AND2  XLXI_25 (.I0(I3[3]), 
                 .I1(XLXN_62), 
                 .O(XLXN_51));
   OR4  XLXI_26 (.I0(XLXN_51), 
                .I1(XLXN_50), 
                .I2(XLXN_49), 
                .I3(XLXN_48), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_Framework(I0, 
                                I1, 
                                I2, 
                                I3, 
                                I4, 
                                I5, 
                                I6, 
                                I7, 
                                s, 
                                o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_108;
   
   AND2  XLXI_10 (.I0(o0[0]), 
                 .I1(XLXN_108), 
                 .O(XLXN_33));
   AND2  XLXI_11 (.I0(o1[0]), 
                 .I1(s[2]), 
                 .O(XLXN_34));
   OR2  XLXI_14 (.I0(XLXN_34), 
                .I1(XLXN_33), 
                .O(o[0]));
   AND2  XLXI_15 (.I0(o0[1]), 
                 .I1(XLXN_108), 
                 .O(XLXN_40));
   AND2  XLXI_16 (.I0(o1[1]), 
                 .I1(s[2]), 
                 .O(XLXN_39));
   OR2  XLXI_17 (.I0(XLXN_39), 
                .I1(XLXN_40), 
                .O(o[1]));
   AND2  XLXI_18 (.I0(o0[2]), 
                 .I1(XLXN_108), 
                 .O(XLXN_42));
   AND2  XLXI_19 (.I0(o1[2]), 
                 .I1(s[2]), 
                 .O(XLXN_41));
   OR2  XLXI_20 (.I0(XLXN_41), 
                .I1(XLXN_42), 
                .O(o[2]));
   AND2  XLXI_21 (.I0(o0[3]), 
                 .I1(XLXN_108), 
                 .O(XLXN_44));
   AND2  XLXI_22 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_43));
   OR2  XLXI_23 (.I0(XLXN_43), 
                .I1(XLXN_44), 
                .O(o[3]));
   AND2  XLXI_24 (.I0(o2[0]), 
                 .I1(XLXN_108), 
                 .O(XLXN_46));
   AND2  XLXI_25 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_45));
   OR2  XLXI_26 (.I0(XLXN_45), 
                .I1(XLXN_46), 
                .O(o[4]));
   AND2  XLXI_27 (.I0(o2[1]), 
                 .I1(XLXN_108), 
                 .O(XLXN_48));
   AND2  XLXI_28 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_47));
   OR2  XLXI_29 (.I0(XLXN_47), 
                .I1(XLXN_48), 
                .O(o[5]));
   AND2  XLXI_30 (.I0(o2[2]), 
                 .I1(XLXN_108), 
                 .O(XLXN_50));
   AND2  XLXI_31 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_49));
   OR2  XLXI_32 (.I0(XLXN_49), 
                .I1(XLXN_50), 
                .O(o[6]));
   AND2  XLXI_33 (.I0(o2[3]), 
                 .I1(XLXN_108), 
                 .O(XLXN_52));
   AND2  XLXI_34 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_51));
   OR2  XLXI_35 (.I0(XLXN_51), 
                .I1(XLXN_52), 
                .O(o[7]));
   INV  XLXI_36 (.I(s[2]), 
                .O(XLXN_108));
   MUX4T1_4_MUSER_Framework  XLXI_37 (.I0(I0[3:0]), 
                                     .I1(I1[3:0]), 
                                     .I2(I2[3:0]), 
                                     .I3(I3[3:0]), 
                                     .s(s[1:0]), 
                                     .o(o0[3:0]));
   MUX4T1_4_MUSER_Framework  XLXI_38 (.I0(I4[3:0]), 
                                     .I1(I5[3:0]), 
                                     .I2(I6[3:0]), 
                                     .I3(I7[3:0]), 
                                     .s(s[1:0]), 
                                     .o(o1[3:0]));
   MUX4T1_4_MUSER_Framework  XLXI_39 (.I0(I0[7:4]), 
                                     .I1(I1[7:4]), 
                                     .I2(I2[7:4]), 
                                     .I3(I3[7:4]), 
                                     .s(s[1:0]), 
                                     .o(o2[3:0]));
   MUX4T1_4_MUSER_Framework  XLXI_40 (.I0(I4[7:4]), 
                                     .I1(I5[7:4]), 
                                     .I2(I6[7:4]), 
                                     .I3(I7[7:4]), 
                                     .s(s[1:0]), 
                                     .o(o3[3:0]));
endmodule
`timescale 1ns / 1ps

module SCANSYNC_1_MUSER_Framework(Hexs, 
                                  LES, 
                                  point, 
                                  Scan, 
                                  AN, 
                                  Hexo, 
                                  LE, 
                                  p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   MUX8T1_8_MUSER_Framework  XLXI_1 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                    .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                    .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                    .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                    .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                    .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                    .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                    .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                    .s(Scan[2:0]), 
                                    .o(Hex[7:0]));
   MUX8T1_8_MUSER_Framework  XLXI_2 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, 
         G0}), 
                                    .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                    .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                    .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                    .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                    .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                    .I6({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                    .I7({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                    .s(Scan[2:0]), 
                                    .o(COM[7:0]));
   VCC  XLXI_5 (.P(V5));
   GND  XLXI_6 (.G(G0));
   BUF  XLXI_7 (.I(Hex[7]), 
               .O(Hexo[3]));
   BUF  XLXI_8 (.I(Hex[6]), 
               .O(Hexo[2]));
   BUF  XLXI_9 (.I(Hex[5]), 
               .O(Hexo[1]));
   BUF  XLXI_10 (.I(Hex[4]), 
                .O(Hexo[0]));
   BUF  XLXI_11 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_12 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_13 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_14 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_15 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_16 (.I(COM[6]), 
                .O(p));
endmodule
`timescale 1ns / 1ps

module MUX_4_MUSER_Framework(ai, 
                             bi, 
                             s, 
                             ou);

    input [3:0] ai;
    input [3:0] bi;
    input s;
   output [3:0] ou;
   
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_25;
   
   AND2  XLXI_1 (.I0(ai[0]), 
                .I1(XLXN_25), 
                .O(XLXN_16));
   AND2  XLXI_2 (.I0(ai[1]), 
                .I1(XLXN_25), 
                .O(XLXN_17));
   AND2  XLXI_3 (.I0(ai[2]), 
                .I1(XLXN_25), 
                .O(XLXN_18));
   AND2  XLXI_4 (.I0(ai[3]), 
                .I1(XLXN_25), 
                .O(XLXN_19));
   AND2  XLXI_8 (.I0(bi[0]), 
                .I1(s), 
                .O(XLXN_20));
   AND2  XLXI_9 (.I0(bi[2]), 
                .I1(s), 
                .O(XLXN_22));
   AND2  XLXI_10 (.I0(bi[3]), 
                 .I1(s), 
                 .O(XLXN_23));
   AND2  XLXI_11 (.I0(bi[1]), 
                 .I1(s), 
                 .O(XLXN_21));
   OR2  XLXI_16 (.I0(XLXN_20), 
                .I1(XLXN_16), 
                .O(ou[0]));
   OR2  XLXI_17 (.I0(XLXN_21), 
                .I1(XLXN_17), 
                .O(ou[1]));
   OR2  XLXI_18 (.I0(XLXN_22), 
                .I1(XLXN_18), 
                .O(ou[2]));
   OR2  XLXI_19 (.I0(XLXN_23), 
                .I1(XLXN_19), 
                .O(ou[3]));
   INV  XLXI_20 (.I(s), 
                .O(XLXN_25));
endmodule
`timescale 1ns / 1ps

module MUX_8_MUSER_Framework(a, 
                             b, 
                             s, 
                             ou);

    input [7:0] a;
    input [7:0] b;
    input s;
   output [7:0] ou;
   
   
   MUX_4_MUSER_Framework  XLXI_1 (.ai(a[3:0]), 
                                 .bi(b[3:0]), 
                                 .s(s), 
                                 .ou(ou[3:0]));
   MUX_4_MUSER_Framework  XLXI_2 (.ai(a[7:4]), 
                                 .bi(b[7:4]), 
                                 .s(s), 
                                 .ou(ou[7:4]));
endmodule
`timescale 1ns / 1ps

module MC14495_ZJU_MUSER_Framework(D0, 
                                   D1, 
                                   D2, 
                                   D3, 
                                   LE, 
                                   point, 
                                   a, 
                                   b, 
                                   c, 
                                   d, 
                                   e, 
                                   f, 
                                   g, 
                                   p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_14;
   wire XLXN_107;
   wire XLXN_110;
   wire XLXN_137;
   wire XLXN_138;
   wire XLXN_139;
   wire XLXN_140;
   wire XLXN_183;
   wire XLXN_198;
   wire XLXN_200;
   wire XLXN_205;
   wire XLXN_209;
   wire XLXN_210;
   wire XLXN_215;
   wire XLXN_218;
   wire XLXN_219;
   wire XLXN_221;
   wire XLXN_234;
   wire XLXN_235;
   wire XLXN_236;
   wire XLXN_265;
   wire XLXN_405;
   wire XLXN_406;
   wire XLXN_407;
   wire XLXN_434;
   wire XLXN_439;
   wire XLXN_464;
   wire XLXN_465;
   wire XLXN_472;
   wire XLXN_546;
   wire XLXN_563;
   wire XLXN_571;
   
   OR2  XLXI_1 (.I0(LE), 
               .I1(XLXN_265), 
               .O(g));
   OR2  XLXI_8 (.I0(LE), 
               .I1(XLXN_465), 
               .O(f));
   OR2  XLXI_9 (.I0(LE), 
               .I1(XLXN_215), 
               .O(e));
   OR2  XLXI_10 (.I0(LE), 
                .I1(XLXN_205), 
                .O(d));
   OR2  XLXI_11 (.I0(LE), 
                .I1(XLXN_183), 
                .O(c));
   OR2  XLXI_12 (.I0(LE), 
                .I1(XLXN_464), 
                .O(b));
   OR2  XLXI_13 (.I0(LE), 
                .I1(XLXN_14), 
                .O(a));
   INV  XLXI_14 (.I(point), 
                .O(p));
   OR4  XLXI_15 (.I0(XLXN_110), 
                .I1(XLXN_434), 
                .I2(XLXN_439), 
                .I3(XLXN_107), 
                .O(XLXN_14));
   OR4  XLXI_16 (.I0(XLXN_140), 
                .I1(XLXN_139), 
                .I2(XLXN_138), 
                .I3(XLXN_137), 
                .O(XLXN_464));
   AND4  XLXI_55 (.I0(D0), 
                 .I1(XLXN_571), 
                 .I2(XLXN_472), 
                 .I3(XLXN_546), 
                 .O(XLXN_107));
   AND4  XLXI_56 (.I0(XLXN_563), 
                 .I1(XLXN_472), 
                 .I2(D2), 
                 .I3(XLXN_546), 
                 .O(XLXN_439));
   AND4  XLXI_57 (.I0(D0), 
                 .I1(XLXN_472), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_434));
   AND4  XLXI_58 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_571), 
                 .I3(D3), 
                 .O(XLXN_110));
   AND4  XLXI_79 (.I0(D0), 
                 .I1(XLXN_472), 
                 .I2(D2), 
                 .I3(XLXN_546), 
                 .O(XLXN_137));
   AND3  XLXI_135 (.I0(XLXN_563), 
                  .I1(D1), 
                  .I2(D2), 
                  .O(XLXN_138));
   AND3  XLXI_136 (.I0(XLXN_563), 
                  .I1(D2), 
                  .I2(D3), 
                  .O(XLXN_139));
   AND3  XLXI_142 (.I0(D0), 
                  .I1(D1), 
                  .I2(D3), 
                  .O(XLXN_140));
   OR3  XLXI_143 (.I0(XLXN_198), 
                 .I1(XLXN_200), 
                 .I2(XLXN_139), 
                 .O(XLXN_183));
   AND3  XLXI_144 (.I0(D1), 
                  .I1(D2), 
                  .I2(D3), 
                  .O(XLXN_198));
   AND4  XLXI_154 (.I0(XLXN_563), 
                  .I1(D1), 
                  .I2(XLXN_571), 
                  .I3(XLXN_546), 
                  .O(XLXN_200));
   OR4  XLXI_156 (.I0(XLXN_210), 
                 .I1(XLXN_209), 
                 .I2(XLXN_439), 
                 .I3(XLXN_107), 
                 .O(XLXN_205));
   AND3  XLXI_157 (.I0(D0), 
                  .I1(D1), 
                  .I2(D2), 
                  .O(XLXN_209));
   AND4  XLXI_158 (.I0(XLXN_563), 
                  .I1(D1), 
                  .I2(XLXN_571), 
                  .I3(D3), 
                  .O(XLXN_210));
   AND2  XLXI_163 (.I0(D0), 
                  .I1(XLXN_546), 
                  .O(XLXN_218));
   OR3  XLXI_164 (.I0(XLXN_221), 
                 .I1(XLXN_219), 
                 .I2(XLXN_218), 
                 .O(XLXN_215));
   AND3  XLXI_165 (.I0(D0), 
                  .I1(XLXN_472), 
                  .I2(XLXN_571), 
                  .O(XLXN_221));
   AND3  XLXI_166 (.I0(XLXN_472), 
                  .I1(D2), 
                  .I2(XLXN_546), 
                  .O(XLXN_219));
   OR4  XLXI_172 (.I0(XLXN_234), 
                 .I1(XLXN_235), 
                 .I2(XLXN_236), 
                 .I3(XLXN_434), 
                 .O(XLXN_465));
   AND3  XLXI_175 (.I0(D1), 
                  .I1(XLXN_571), 
                  .I2(XLXN_546), 
                  .O(XLXN_235));
   AND3  XLXI_176 (.I0(D0), 
                  .I1(XLXN_571), 
                  .I2(XLXN_546), 
                  .O(XLXN_236));
   AND3  XLXI_177 (.I0(D0), 
                  .I1(D1), 
                  .I2(XLXN_546), 
                  .O(XLXN_234));
   OR3  XLXI_184 (.I0(XLXN_405), 
                 .I1(XLXN_406), 
                 .I2(XLXN_407), 
                 .O(XLXN_265));
   AND3  XLXI_185 (.I0(XLXN_472), 
                  .I1(XLXN_571), 
                  .I2(XLXN_546), 
                  .O(XLXN_407));
   AND4  XLXI_186 (.I0(D0), 
                  .I1(D1), 
                  .I2(D2), 
                  .I3(XLXN_546), 
                  .O(XLXN_406));
   AND4  XLXI_187 (.I0(XLXN_563), 
                  .I1(XLXN_472), 
                  .I2(D2), 
                  .I3(D3), 
                  .O(XLXN_405));
   INV  XLXI_324 (.I(D0), 
                 .O(XLXN_563));
   INV  XLXI_325 (.I(D1), 
                 .O(XLXN_472));
   INV  XLXI_326 (.I(D2), 
                 .O(XLXN_571));
   INV  XLXI_327 (.I(D3), 
                 .O(XLXN_546));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev_MUSER_Framework(flash, 
                                Hexs, 
                                LES, 
                                point, 
                                Scan, 
                                SW0, 
                                AN, 
                                SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [3:0] Hex;
   wire [7:0] SEG_TXT;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_15;
   wire [7:0] XLXN_22;
   
   MC14495_ZJU_MUSER_Framework  XLXI_3 (.D0(Hex[0]), 
                                       .D1(Hex[1]), 
                                       .D2(Hex[2]), 
                                       .D3(Hex[3]), 
                                       .LE(XLXN_5), 
                                       .point(XLXN_15), 
                                       .a(SEG_TXT[0]), 
                                       .b(SEG_TXT[1]), 
                                       .c(SEG_TXT[2]), 
                                       .d(SEG_TXT[3]), 
                                       .e(SEG_TXT[4]), 
                                       .f(SEG_TXT[5]), 
                                       .g(SEG_TXT[6]), 
                                       .p(SEG_TXT[7]));
   MUX_8_MUSER_Framework  XLXI_6 (.a(XLXN_22[7:0]), 
                                 .b(SEG_TXT[7:0]), 
                                 .s(SW0), 
                                 .ou(SEGMENT[7:0]));
   AND2  XLXI_7 (.I0(XLXN_4), 
                .I1(flash), 
                .O(XLXN_5));
   SCANSYNC_1_MUSER_Framework  XLXI_8 (.Hexs(Hexs[31:0]), 
                                      .LES(LES[7:0]), 
                                      .point(point[7:0]), 
                                      .Scan(Scan[2:0]), 
                                      .AN(AN[3:0]), 
                                      .Hexo(Hex[3:0]), 
                                      .LE(XLXN_4), 
                                      .p(XLXN_15));
   Seg_map  XLXI_12 (.Hexs(Hexs[31:0]), 
                    .Scan(Scan[2:0]), 
                    .Seg_map(XLXN_22[7:0]));
endmodule
`timescale 1ns / 1ps

module MUX_16_MUSER_Framework(ai, 
                              bi, 
                              s, 
                              ou);

    input [15:0] ai;
    input [15:0] bi;
    input s;
   output [15:0] ou;
   
   
   MUX_4_MUSER_Framework  XLXI_1 (.ai(ai[3:0]), 
                                 .bi(bi[3:0]), 
                                 .s(s), 
                                 .ou(ou[3:0]));
   MUX_4_MUSER_Framework  XLXI_2 (.ai(ai[7:4]), 
                                 .bi(bi[7:4]), 
                                 .s(s), 
                                 .ou(ou[7:4]));
   MUX_4_MUSER_Framework  XLXI_3 (.ai(ai[11:8]), 
                                 .bi(bi[11:8]), 
                                 .s(s), 
                                 .ou(ou[11:8]));
   MUX_4_MUSER_Framework  XLXI_4 (.ai(ai[15:12]), 
                                 .bi(bi[15:12]), 
                                 .s(s), 
                                 .ou(ou[15:12]));
endmodule
`timescale 1ns / 1ps

module MUX_64_MUSER_Framework(ai, 
                              bi, 
                              s, 
                              ou);

    input [63:0] ai;
    input [63:0] bi;
    input s;
   output [63:0] ou;
   
   
   MUX_16_MUSER_Framework  XLXI_7 (.ai(ai[15:0]), 
                                  .bi(bi[15:0]), 
                                  .s(s), 
                                  .ou(ou[15:0]));
   MUX_16_MUSER_Framework  XLXI_8 (.ai(ai[31:16]), 
                                  .bi(bi[31:16]), 
                                  .s(s), 
                                  .ou(ou[31:16]));
   MUX_16_MUSER_Framework  XLXI_10 (.ai(ai[47:32]), 
                                   .bi(bi[47:32]), 
                                   .s(s), 
                                   .ou(ou[47:32]));
   MUX_16_MUSER_Framework  XLXI_11 (.ai(ai[63:48]), 
                                   .bi(bi[63:48]), 
                                   .s(s), 
                                   .ou(ou[63:48]));
endmodule
`timescale 1ns / 1ps

module Display_MUSER_Framework(clk, 
                               flash, 
                               Hex, 
                               LES, 
                               point, 
                               rst, 
                               Start, 
                               SW0, 
                               seg_clk, 
                               seg_clm, 
                               SEG_PEN, 
                               seg_sout);

    input clk;
    input flash;
    input [31:0] Hex;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clm;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] Seg_map;
   wire [63:0] SEG_TXT;
   wire [63:0] XLXN_5;
   
   SSeg_map  XLXI_3 (.Disp_num({Hex[31:0], Hex[31:0]}), 
                    .Seg_map(Seg_map[63:0]));
   MUX_64_MUSER_Framework  XLXI_4 (.ai(SEG_TXT[63:0]), 
                                  .bi(Seg_map[63:0]), 
                                  .s(SW0), 
                                  .ou(XLXN_5[63:0]));
   HexTo8SEG  XLXI_6 (.flash(flash), 
                     .Hex(Hex[31:0]), 
                     .LES(LES[7:0]), 
                     .points(point[7:0]), 
                     .SEG_TXT(SEG_TXT[63:0]));
   P2S  XLXI_8 (.clk(clk), 
               .P_Data(XLXN_5[63:0]), 
               .rst(rst), 
               .Serial(Start), 
               .EN(SEG_PEN), 
               .sout(seg_sout), 
               .s_clk(seg_clk), 
               .s_clrn(seg_clm));
endmodule
`timescale 1ns / 1ps

module Framework(clk_100mhz, 
                 K_COL, 
                 PS2_CLK, 
                 PS2_DATA, 
                 RSTN, 
                 SW, 
                 AN, 
                 B, 
                 Buzzer, 
                 CR, 
                 G, 
                 HS, 
                 K_ROW, 
                 LED, 
                 LEDCLK, 
                 LEDCLR, 
                 LEDDT, 
                 LEDEN, 
                 R, 
                 RDY, 
                 readn, 
                 SEGCLK, 
                 SEGCLR, 
                 SEGDT, 
                 SEGEN, 
                 SEGMENT, 
                 VS);

    input clk_100mhz;
    input [3:0] K_COL;
    input PS2_CLK;
    input PS2_DATA;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [3:0] B;
   output Buzzer;
   output CR;
   output [3:0] G;
   output HS;
   output [4:0] K_ROW;
   output [7:0] LED;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output [3:0] R;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   output [7:0] SEGMENT;
   output VS;
   
   wire [31:0] Addr_out;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [7:0] blink_out;
   wire [3:0] BTN_OK;
   wire clk_CPU;
   wire clk_IO;
   wire [31:0] Counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire GPIOF0;
   wire [31:0] inst;
   wire [15:0] LED_out;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_20;
   wire XLXN_110;
   wire XLXN_125;
   wire XLXN_192;
   wire [1:0] XLXN_209;
   wire XLXN_215;
   wire XLXN_217;
   wire XLXN_218;
   wire XLXN_219;
   wire [31:0] XLXN_220;
   wire [0:0] XLXN_222;
   wire [9:0] XLXN_223;
   wire [31:0] XLXN_224;
   wire XLXN_228;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SAnti_jitter  XLXI_1 (.clk(clk_100mhz), 
                        .Key_y(K_COL[3:0]), 
                        .readn(readn_DUMMY), 
                        .RSTN(RSTN), 
                        .SW(SW[15:0]), 
                        .BTN_OK(BTN_OK[3:0]), 
                        .CR(CR), 
                        .Key_out(XLXN_20[4:0]), 
                        .Key_ready(RDY_DUMMY), 
                        .Key_x(K_ROW[4:0]), 
                        .pulse_out(Pulse[3:0]), 
                        .rst(rst), 
                        .SW_OK(SW_OK[15:0]));
   SEnter_2_32  XLXI_2 (.BTN(BTN_OK[2:0]), 
                       .clk(clk_100mhz), 
                       .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                       .Din(XLXN_20[4:0]), 
                       .D_ready(RDY_DUMMY), 
                       .Ai(), 
                       .Bi(Bi[31:0]), 
                       .blink(blink[7:0]), 
                       .readn(readn_DUMMY));
   Multi_8CH32  XLXI_5 (.blink_in({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0}), 
                       .clk(clk_IO), 
                       .Data0(CPU2IO[31:0]), 
                       .EN(XLXN_228), 
                       .point_in({Div[31:0], Div[31:0]}), 
                       .rst(rst), 
                       .Test(SW_OK[7:5]), 
                       .Test_data1({N0, N0, PC[31:2]}), 
                       .Test_data2(inst[31:0]), 
                       .Test_data3(Counter_out[31:0]), 
                       .Test_data4(Addr_out[31:0]), 
                       .Test_data5(Data_out[31:0]), 
                       .Test_data6(Data_in[31:0]), 
                       .Test_data7(PC[31:0]), 
                       .blink_out(blink_out[7:0]), 
                       .Disp_num(Disp_num[31:0]), 
                       .point_out(point_out[7:0]));
   VCC  XLXI_7 (.P(V5));
   GND  XLXI_8 (.G(N0));
   BUF  XLXI_11 (.I(V5), 
                .O(Buzzer));
   Display_MUSER_Framework  XLXI_12 (.clk(clk_100mhz), 
                                    .flash(Div[25]), 
                                    .Hex(Disp_num[31:0]), 
                                    .LES(blink_out[7:0]), 
                                    .point(point_out[7:0]), 
                                    .rst(rst), 
                                    .Start(Div[20]), 
                                    .SW0(SW_OK[0]), 
                                    .seg_clk(SEGCLK), 
                                    .seg_clm(SEGCLR), 
                                    .SEG_PEN(SEGEN), 
                                    .seg_sout(SEGDT));
   Seg7_Dev_MUSER_Framework  XLXI_15 (.flash(Div[25]), 
                                     .Hexs(Disp_num[31:0]), 
                                     .LES(blink_out[7:0]), 
                                     .point(point_out[7:0]), 
                                     .Scan({SW_OK[1], Div[19:18]}), 
                                     .SW0(XLXN_125), 
                                     .AN(AN[3:0]), 
                                     .SEGMENT(SEGMENT[7:0]));
   U8_clk_div  XLXI_26 (.clk(clk_100mhz), 
                       .rst(rst), 
                       .SW2(SW_OK[2]), 
                       .clkdiv(Div[31:0]), 
                       .Clk_CPU(clk_CPU));
   INV  XLXI_29 (.I(clk_100mhz), 
                .O(XLXN_110));
   INV  XLXI_32 (.I(SW_OK[0]), 
                .O(XLXN_125));
   VGA  XLXI_33 (.clk(), 
                .Din(), 
                .reset(), 
                .B(B[3:0]), 
                .G(G[3:0]), 
                .HS(HS), 
                .R(R[3:0]), 
                .vga_x(), 
                .vga_y(), 
                .VS(VS));
   ps2  XLXI_34 (.clk(), 
                .ps2_clk(PS2_CLK), 
                .ps2_data(PS2_DATA), 
                .rst(), 
                .data_out(), 
                .ready());
   MIO_BUS  XLXI_36 (.addr_bus(Addr_out[31:0]), 
                    .BTN(BTN_OK[3:0]), 
                    .clk(clk_100mhz), 
                    .counter_out(Counter_out[31:0]), 
                    .counter0_out(XLXN_219), 
                    .counter1_out(XLXN_217), 
                    .counter2_out(XLXN_218), 
                    .Cpu_data2bus(Data_out[31:0]), 
                    .led_out(LED_out[15:0]), 
                    .mem_w(XLXN_192), 
                    .ram_data_out(XLXN_224[31:0]), 
                    .rst(rst), 
                    .SW(SW_OK[15:0]), 
                    .counter_we(XLXN_215), 
                    .Cpu_data4bus(Data_in[31:0]), 
                    .data_ram_we(XLXN_222[0]), 
                    .GPIOe0000000_we(XLXN_228), 
                    .GPIOf0000000_we(GPIOF0), 
                    .Peripheral_in(CPU2IO[31:0]), 
                    .ram_addr(XLXN_223[9:0]), 
                    .ram_data_in(XLXN_220[31:0]));
   Counter_x  XLXI_37 (.clk(clk_IO), 
                      .clk0(Div[6]), 
                      .clk1(Div[9]), 
                      .clk2(Div[11]), 
                      .counter_ch(XLXN_209[1:0]), 
                      .counter_val(CPU2IO[31:0]), 
                      .counter_we(XLXN_215), 
                      .rst(rst), 
                      .counter_out(Counter_out[31:0]), 
                      .counter0_OUT(XLXN_219), 
                      .counter1_OUT(XLXN_217), 
                      .counter2_OUT(XLXN_218));
   INV  XLXI_38 (.I(clk_CPU), 
                .O(clk_IO));
   GPIO  XLXI_40 (.clk(clk_IO), 
                 .EN(GPIOF0), 
                 .P_Data(CPU2IO[31:0]), 
                 .rst(rst), 
                 .Start(Div[20]), 
                 .counter_set(XLXN_209[1:0]), 
                 .GPIOf0(), 
                 .led_clk(LEDCLK), 
                 .led_clrn(LEDCLR), 
                 .LED_out(LED_out[15:0]), 
                 .LED_PEN(LEDEN), 
                 .led_sout(LEDDT));
   PIO  XLXI_41 (.clk(clk_IO), 
                .EN(GPIOF0), 
                .PData_in(CPU2IO[31:0]), 
                .rst(rst), 
                .counter_set(), 
                .GPIOf0(), 
                .LED_out(LED[7:0]));
   ROM_D  XLXI_44 (.a(PC[11:2]), 
                  .spo(inst[31:0]));
   RAM_B  XLXI_45 (.addra(XLXN_223[9:0]), 
                  .clka(XLXN_110), 
                  .dina(XLXN_220[31:0]), 
                  .wea(XLXN_222[0]), 
                  .douta(XLXN_224[31:0]));
   SCPU_MUSER_Framework  XLXI_49 (.clk(clk_CPU), 
                                 .Data_in(Data_in[31:0]), 
                                 .inst_in(inst[31:0]), 
                                 .INT(XLXN_219), 
                                 .MIO_ready(), 
                                 .reset(rst), 
                                 .Addr_out(Addr_out[31:0]), 
                                 .CPU_MIO(), 
                                 .Data_out(Data_out[31:0]), 
                                 .mem_w(XLXN_192), 
                                 .PC_out(PC[31:0]));
endmodule
