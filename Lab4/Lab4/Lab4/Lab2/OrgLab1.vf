////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : OrgLab1.vf
// /___/   /\     Timestamp : 03/12/2019 17:31:21
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath D:/z/Lab2/Lab2/ipcore_dir -intstyle ise -family kintex7 -verilog D:/z/Lab2/Lab2/OrgLab1.vf -w D:/z/Lab2/Lab2/OrgLab1.sch
//Design Name: OrgLab1
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MC14495_ZJU_MUSER_OrgLab1(D0, 
                                 D1, 
                                 D2, 
                                 D3, 
                                 LE, 
                                 point, 
                                 a, 
                                 b, 
                                 c, 
                                 d, 
                                 e, 
                                 f, 
                                 g, 
                                 p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_14;
   wire XLXN_24;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_111;
   wire XLXN_115;
   wire XLXN_119;
   wire XLXN_140;
   wire XLXN_141;
   wire XLXN_170;
   wire XLXN_171;
   wire XLXN_172;
   wire XLXN_184;
   wire XLXN_185;
   wire XLXN_186;
   wire XLXN_200;
   wire XLXN_201;
   wire XLXN_202;
   wire XLXN_208;
   wire XLXN_209;
   wire XLXN_210;
   wire XLXN_211;
   wire XLXN_212;
   wire XLXN_213;
   wire XLXN_214;
   
   INV  XLXI_1 (.I(D3), 
               .O(XLXN_14));
   INV  XLXI_2 (.I(D2), 
               .O(XLXN_61));
   INV  XLXI_3 (.I(D1), 
               .O(XLXN_62));
   INV  XLXI_4 (.I(D0), 
               .O(XLXN_24));
   AND4  XLXI_5 (.I0(D0), 
                .I1(XLXN_61), 
                .I2(XLXN_62), 
                .I3(XLXN_14), 
                .O(XLXN_119));
   AND4  XLXI_6 (.I0(XLXN_24), 
                .I1(XLXN_62), 
                .I2(D2), 
                .I3(XLXN_14), 
                .O(XLXN_26));
   AND4  XLXI_7 (.I0(D0), 
                .I1(XLXN_62), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_27));
   AND4  XLXI_8 (.I0(D0), 
                .I1(D1), 
                .I2(XLXN_61), 
                .I3(D3), 
                .O(XLXN_28));
   OR4  XLXI_17 (.I0(XLXN_28), 
                .I1(XLXN_27), 
                .I2(XLXN_26), 
                .I3(XLXN_119), 
                .O(XLXN_208));
   AND4  XLXI_18 (.I0(D0), 
                 .I1(XLXN_62), 
                 .I2(D2), 
                 .I3(XLXN_14), 
                 .O(XLXN_72));
   AND3  XLXI_19 (.I0(XLXN_24), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_73));
   AND3  XLXI_20 (.I0(XLXN_24), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_74));
   AND3  XLXI_21 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_75));
   OR4  XLXI_22 (.I0(XLXN_75), 
                .I1(XLXN_74), 
                .I2(XLXN_73), 
                .I3(XLXN_72), 
                .O(XLXN_209));
   AND4  XLXI_23 (.I0(XLXN_24), 
                 .I1(D1), 
                 .I2(XLXN_61), 
                 .I3(XLXN_14), 
                 .O(XLXN_111));
   AND3  XLXI_24 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_115));
   OR3  XLXI_26 (.I0(XLXN_115), 
                .I1(XLXN_111), 
                .I2(XLXN_74), 
                .O(XLXN_210));
   AND3  XLXI_27 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_140));
   AND4  XLXI_28 (.I0(XLXN_24), 
                 .I1(D1), 
                 .I2(XLXN_61), 
                 .I3(D3), 
                 .O(XLXN_141));
   OR4  XLXI_29 (.I0(XLXN_141), 
                .I1(XLXN_140), 
                .I2(XLXN_26), 
                .I3(XLXN_119), 
                .O(XLXN_211));
   AND3  XLXI_30 (.I0(XLXN_62), 
                 .I1(D2), 
                 .I2(XLXN_14), 
                 .O(XLXN_171));
   AND2  XLXI_32 (.I0(D0), 
                 .I1(XLXN_14), 
                 .O(XLXN_170));
   AND3  XLXI_35 (.I0(D0), 
                 .I1(XLXN_62), 
                 .I2(XLXN_61), 
                 .O(XLXN_172));
   OR3  XLXI_36 (.I0(XLXN_172), 
                .I1(XLXN_171), 
                .I2(XLXN_170), 
                .O(XLXN_212));
   AND3  XLXI_37 (.I0(D0), 
                 .I1(XLXN_61), 
                 .I2(XLXN_14), 
                 .O(XLXN_184));
   AND3  XLXI_38 (.I0(D1), 
                 .I1(XLXN_61), 
                 .I2(XLXN_14), 
                 .O(XLXN_185));
   AND3  XLXI_39 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_14), 
                 .O(XLXN_186));
   OR4  XLXI_41 (.I0(XLXN_186), 
                .I1(XLXN_185), 
                .I2(XLXN_184), 
                .I3(XLXN_27), 
                .O(XLXN_213));
   AND3  XLXI_42 (.I0(XLXN_62), 
                 .I1(XLXN_61), 
                 .I2(XLXN_14), 
                 .O(XLXN_200));
   AND4  XLXI_43 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .I3(XLXN_14), 
                 .O(XLXN_201));
   AND4  XLXI_44 (.I0(XLXN_24), 
                 .I1(XLXN_62), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_202));
   OR3  XLXI_46 (.I0(XLXN_202), 
                .I1(XLXN_201), 
                .I2(XLXN_200), 
                .O(XLXN_214));
   OR2  XLXI_47 (.I0(LE), 
                .I1(XLXN_208), 
                .O(a));
   OR2  XLXI_48 (.I0(LE), 
                .I1(XLXN_209), 
                .O(b));
   OR2  XLXI_49 (.I0(LE), 
                .I1(XLXN_210), 
                .O(c));
   OR2  XLXI_50 (.I0(LE), 
                .I1(XLXN_211), 
                .O(d));
   OR2  XLXI_51 (.I0(LE), 
                .I1(XLXN_212), 
                .O(e));
   OR2  XLXI_52 (.I0(LE), 
                .I1(XLXN_213), 
                .O(f));
   OR2  XLXI_53 (.I0(LE), 
                .I1(XLXN_214), 
                .O(g));
   INV  XLXI_57 (.I(point), 
                .O(p));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev_MUSER_OrgLab1(flash, 
                              Hexs, 
                              LES, 
                              point, 
                              Scan, 
                              SW0, 
                              AN, 
                              SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [7:0] XLXN_6;
   wire [7:0] XLXN_7;
   wire [3:0] XLXN_8;
   wire XLXN_18;
   wire XLXN_21;
   wire XLXN_22;
   
   AND2  XLXI_1 (.I0(XLXN_22), 
                .I1(flash), 
                .O(XLXN_18));
   MC14495_ZJU_MUSER_OrgLab1  XLXI_3 (.D0(XLXN_8[0]), 
                                     .D1(XLXN_8[1]), 
                                     .D2(XLXN_8[2]), 
                                     .D3(XLXN_8[3]), 
                                     .LE(XLXN_18), 
                                     .point(XLXN_21), 
                                     .a(XLXN_7[0]), 
                                     .b(XLXN_7[1]), 
                                     .c(XLXN_7[2]), 
                                     .d(XLXN_7[3]), 
                                     .e(XLXN_7[4]), 
                                     .f(XLXN_7[5]), 
                                     .g(XLXN_7[6]), 
                                     .p(XLXN_7[7]));
   Seg_map  XLXI_4 (.Hexs(Hexs[31:0]), 
                   .Scan(Scan[2:0]), 
                   .Seg_map(XLXN_6[7:0]));
   MUX2T1_8  XLXI_5 (.I0(XLXN_6[7:0]), 
                    .I1(XLXN_7[7:0]), 
                    .s(SW0), 
                    .o(SEGMENT[7:0]));
   Scansync  XLXI_7 (.Hexs(Hexs[31:0]), 
                    .LES(LES[7:0]), 
                    .point(point[7:0]), 
                    .Scan(Scan[2:0]), 
                    .AN(AN[3:0]), 
                    .Hexo(XLXN_8[3:0]), 
                    .LE(XLXN_22), 
                    .p(XLXN_21));
endmodule
`timescale 1ns / 1ps

module SSeg7_Dev_MUSER_OrgLab1(clk, 
                               flash, 
                               Hexs, 
                               LES, 
                               point, 
                               rst, 
                               Start, 
                               SW0, 
                               seg_clk, 
                               seg_clrn, 
                               SEG_PEN, 
                               seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] XLXN_14;
   wire [63:0] XLXN_15;
   wire [63:0] XLXN_16;
   
   HexTo8SEG  XLXI_1 (.flash(flash), 
                     .Hexs(Hexs[31:0]), 
                     .LES(LES[7:0]), 
                     .point(point[7:0]), 
                     .SEG_TXT(XLXN_14[63:0]));
   SSeg_map  XLXI_2 (.Disp_num({Hexs[31:0], Hexs[31:0]}), 
                    .Seg_map(XLXN_15[63:0]));
   MUX2T1_64  XLXI_3 (.a(XLXN_14[63:0]), 
                     .b(XLXN_15[63:0]), 
                     .sel(SW0), 
                     .o(XLXN_16[63:0]));
   P2S  XLXI_4 (.clk(clk), 
               .P_Data(XLXN_16[63:0]), 
               .rst(rst), 
               .Serial(Start), 
               .EN(SEG_PEN), 
               .sout(seg_sout), 
               .s_clk(seg_clk), 
               .s_clrn(seg_clrn));
endmodule
`timescale 1ns / 1ps

module OrgLab1(BTN_y, 
               clk_100mhz, 
               RSTN, 
               SW, 
               AN, 
               BTN_x, 
               Buzzer, 
               CR, 
               LED, 
               led_clk, 
               led_clrn, 
               LED_PEN, 
               led_sout, 
               RDY, 
               readn, 
               SEGMENT, 
               seg_clk, 
               seg_clrn, 
               SEG_PEN, 
               seg_sout);

    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire [7:0] LE_out;
   wire N0;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_13;
   wire XLXN_34;
   wire XLXN_55;
   wire [31:0] XLXN_58;
   wire [31:0] XLXN_60;
   wire [31:0] XLXN_63;
   wire [31:0] XLXN_64;
   wire [31:0] XLXN_65;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SAnti_jitter  XLXI_1 (.clk(clk_100mhz), 
                        .Key_y(BTN_y[3:0]), 
                        .readn(readn_DUMMY), 
                        .RSTN(RSTN), 
                        .SW(SW[15:0]), 
                        .BTN_OK(BTN_OK[3:0]), 
                        .CR(CR), 
                        .Key_out(XLXN_13[4:0]), 
                        .Key_ready(RDY_DUMMY), 
                        .Key_x(BTN_x[4:0]), 
                        .pulse_out(Pulse[3:0]), 
                        .rst(XLXN_34), 
                        .SW_OK(SW_OK[15:0]));
   clk_div  XLXI_2 (.clk(clk_100mhz), 
                   .rst(XLXN_34), 
                   .SW2(SW_OK[2]), 
                   .clkdiv(Div[31:0]), 
                   .Clk_CPU(Clk_CPU));
   SEnter_2_32  XLXI_3 (.BTN(BTN_OK[2:0]), 
                       .clk(clk_100mhz), 
                       .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                       .Din(XLXN_13[4:0]), 
                       .D_ready(RDY_DUMMY), 
                       .Ai(Ai[31:0]), 
                       .Bi(Bi[31:0]), 
                       .blink(blink[7:0]), 
                       .readn(readn_DUMMY));
   SSeg7_Dev_MUSER_OrgLab1  XLXI_4 (.clk(clk_100mhz), 
                                   .flash(Div[25]), 
                                   .Hexs(Disp_num[31:0]), 
                                   .LES(LE_out[7:0]), 
                                   .point(point_out[7:0]), 
                                   .rst(rst), 
                                   .Start(Div[20]), 
                                   .SW0(SW_OK[0]), 
                                   .seg_clk(seg_clk), 
                                   .seg_clrn(seg_clrn), 
                                   .SEG_PEN(SEG_PEN), 
                                   .seg_sout(seg_sout));
   Multi_8CH32  XLXI_5 (.clk(clk_100mhz), 
                       .Data0(Ai[31:0]), 
                       .data1(Bi[31:0]), 
                       .data2(Div[31:0]), 
                       .data3(XLXN_63[31:0]), 
                       .data4(XLXN_64[31:0]), 
                       .data5(XLXN_65[31:0]), 
                       .data6(XLXN_58[31:0]), 
                       .data7(XLXN_60[31:0]), 
                       .EN(V5), 
                       .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         blink[3:0], N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, blink[7:0], blink[7:0]}), 
                       .point_in({Div[31:0], Div[31:0]}), 
                       .rst(XLXN_34), 
                       .Test(SW_OK[7:5]), 
                       .Disp_num(Disp_num[31:0]), 
                       .LE_out(LE_out[7:0]), 
                       .point_out(point_out[7:0]));
   SPIO  XLXI_6 (.clk(clk_100mhz), 
                .EN(V5), 
                .P_Data({SW[13:0], SW_OK[15:0], N0, N0}), 
                .rst(rst), 
                .Start(Div[20]), 
                .counter_set(), 
                .GPIOf0(), 
                .led_clk(led_clk), 
                .led_clrn(led_clrn), 
                .LED_out(), 
                .LED_PEN(LED_PEN), 
                .led_sout(led_sout));
   INV  XLXI_10 (.I(clk_100mhz), 
                .O(XLXN_55));
   VCC  XLXI_11 (.P(V5));
   GND  XLXI_12 (.G(N0));
   PIO  XLXI_13 (.clk(clk_100mhz), 
                .EN(V5), 
                .PData_in(Ai[31:0]), 
                .rst(N0), 
                .counter_set(), 
                .GPIOf0(), 
                .LED_out(LED[7:0]));
   Seg7_Dev_MUSER_OrgLab1  XLXI_14 (.flash(Div[25]), 
                                   .Hexs(Disp_num[31:0]), 
                                   .LES(LE_out[7:0]), 
                                   .point(point_out[7:0]), 
                                   .Scan({SW_OK[1], Div[19:18]}), 
                                   .SW0(SW_OK[0]), 
                                   .AN(AN[3:0]), 
                                   .SEGMENT(SEGMENT[7:0]));
   BUF  XLXI_16 (.I(V5), 
                .O(Buzzer));
   RAM_B  XLXI_17 (.addra({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
                  .clka(XLXN_55), 
                  .dina(XLXN_58[31:0]), 
                  .wea(SW_OK[4]), 
                  .douta(XLXN_60[31:0]));
   ROM_D  XLXI_18 (.a({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
                  .spo(XLXN_58[31:0]));
endmodule
