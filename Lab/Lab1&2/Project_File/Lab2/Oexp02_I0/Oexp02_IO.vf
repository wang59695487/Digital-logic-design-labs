////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Oexp02_IO.vf
// /___/   /\     Timestamp : 03/13/2018 19:35:33
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Users/asus/Desktop/Computer_Organization/Lab/Lab2/Oexp02_I0/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Users/asus/Desktop/Computer_Organization/Lab/Lab2/Oexp02_I0/Oexp02_IO.vf -w C:/Users/asus/Desktop/Computer_Organization/Lab/Lab2/Oexp02_I0/Oexp02_IO.sch
//Design Name: Oexp02_IO
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Oexp02_IO(clk_100mhz, 
                 K_COL, 
                 RSTN, 
                 SW, 
                 AN, 
                 Buzzer, 
                 CR, 
                 K_ROW, 
                 LED, 
                 LEDCLK, 
                 LEDCLR, 
                 LEDDT, 
                 LEDEN, 
                 RDY, 
                 readn, 
                 SEGCLK, 
                 SEGCLR, 
                 SEGDT, 
                 SEGEN, 
                 SEGMENT);

    input clk_100mhz;
    input [3:0] K_COL;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output Buzzer;
   output CR;
   output [4:0] K_ROW;
   output [7:0] LED;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   output [7:0] SEGMENT;
   
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire [4:0] Key_out;
   wire [7:0] LE_out;
   wire N0;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire XLXN_67;
   wire [31:0] XLXN_72;
   wire [31:0] XLXN_73;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(Key_out[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   ROM_D  U2 (.a({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
             .spo(XLXN_73[31:0]));
   RAM_B  U3 (.addra({N0, N0, N0, N0, N0, SW[3], Div[27:24]}), 
             .clka(XLXN_67), 
             .dina(XLXN_73[31:0]), 
             .wea(SW_OK[4]), 
             .douta(XLXN_72[31:0]));
   Multi_8CH32  U5 (.blink_in({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         blink[3:0], N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, blink[7:0], blink[7:0]}), 
                   .clk(clk_100mhz), 
                   .Data0(Ai[31:0]), 
                   .EN(V5), 
                   .point_in({Div[31:0], Div[31:0]}), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Test_data1(Bi[31:0]), 
                   .Test_data2(), 
                   .Test_data3(), 
                   .Test_data4(), 
                   .Test_data5(), 
                   .Test_data6(XLXN_73[31:0]), 
                   .Test_data7(XLXN_72[31:0]), 
                   .blink_out(LE_out[7:0]), 
                   .Disp_num(Disp_num[31:0]), 
                   .point_out(point_out[7:0]));
   Display  U6 (.clk(clk_100mhz), 
               .flash(Div[25]), 
               .Hexs(Disp_num[31:0]), 
               .LES(LE_out[7:0]), 
               .point(point_out[7:0]), 
               .rst(rst), 
               .Start(Div[10]), 
               .Text(SW_OK[0]), 
               .seg_clk(SEGCLK), 
               .seg_clrn(SEGCLR), 
               .SEG_PEN(SEGEN), 
               .seg_sout(SEGDT));
   GPIO  U7 (.clk(clk_100mhz), 
            .EN(V5), 
            .P_Data({SW[13:0], SW_OK[15:0], N0, N0}), 
            .rst(rst), 
            .Start(Div[10]), 
            .counter_set(), 
            .GPIOf0(), 
            .ledclk(LEDCLK), 
            .ledclrn(LEDCLR), 
            .LEDEN(LEDEN), 
            .ledsout(LEDDT), 
            .LED_out());
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(rst), 
               .SW2(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(K_COL[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(Key_out[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(K_ROW[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   VCC  XLXI_7 (.P(V5));
   GND  XLXI_15 (.G(N0));
   Seg7_Dev  XLXI_16 (.flash(Div[25]), 
                     .Hexs(Disp_num[31:0]), 
                     .LES(LE_out[7:0]), 
                     .point(point_out[7:0]), 
                     .Scan({SW_OK[1], Div[19:18]}), 
                     .SW0(SW_OK[0]), 
                     .AN(AN[3:0]), 
                     .SEGMENT(SEGMENT[7:0]));
   PIO  XLXI_17 (.clk(clk_100mhz), 
                .EN(V5), 
                .PData_in(Ai[31:0]), 
                .rst(N0), 
                .counter_set(), 
                .GPIOf0(), 
                .LED_out(LED[7:0]));
   BUF  XLXI_18 (.I(V5), 
                .O(Buzzer));
   INV  XLXI_21 (.I(clk_100mhz), 
                .O(XLXN_67));
endmodule
